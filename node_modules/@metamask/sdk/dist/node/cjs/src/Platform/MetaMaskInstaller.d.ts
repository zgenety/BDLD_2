import { ProviderService } from '../services/ProviderService';
import { PlatformManager } from './PlatfformManager';
interface InstallerProps {
    remote: ProviderService;
    platformManager: PlatformManager;
    debug?: boolean;
}
interface MetaMaskInstallerState {
    isInstalling: boolean;
    hasInstalled: boolean;
    resendRequest: any;
    platformManager: PlatformManager | null;
    remote: ProviderService | null;
    debug: boolean;
}
/**
 * Singleton class instance
 */
export declare class MetaMaskInstaller {
    private static instance;
    state: MetaMaskInstallerState;
    constructor({ remote, platformManager, debug, }: InstallerProps);
    startDesktopOnboarding(): Promise<void>;
    redirectToProperInstall(): Promise<boolean>;
    checkInstallation(): Promise<boolean>;
    start({ wait }: {
        wait: boolean;
    }): Promise<boolean>;
}
export {};
//# sourceMappingURL=MetaMaskInstaller.d.ts.map